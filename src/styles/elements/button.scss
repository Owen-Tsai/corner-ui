@import '../common/var.scss';
@import '../common/mixins/mixins.scss';
@import '../common/mixins/button.scss';


.c-btn {
  /* Default style rules
  -------------------------------- */
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
  cursor: pointer;
  padding: $button-padding;
  background-color: $bg-color-default-light;
  border: 1px solid $border-color-base;
  border-radius: $border-radius-base;
  transition: all .3s;
  font-size: $font-size-base;
  line-height: $line-height-base;

  &.btn-icon {
    padding: $button-icon-padding;
  }

  &[disabled] {
    cursor: not-allowed;
  }

  &:not([disabled]):hover, &:not([disabled]):focus {
    transition: all .3s;
    background-color: $bg-color-default-medium;
    outline: 0;
  }

  .c-btn-content {
    display: inline-flex;
    align-items: center;
  }

  .c-btn-icon {
    margin-right: 6px;
    font-size: $button-icon-size;
    height: $button-icon-size;
    width: $button-icon-size;
  }

  /* Size variations
  --------------------------------- */
  &.lg {
    font-size: $font-size-md;
    &.btn-icon {
      padding: $button-lg-icon-padding
    }
    .c-btn-icon {
      font-size:$button-lg-icon-size;
      height:$button-lg-icon-size;
      width: $button-lg-icon-size;
    }
    padding: $button-lg-padding
  }
  &.sm {
    font-size: $font-size-sm;
    &.btn-icon {
      padding: $button-sm-icon-padding;
    }
    padding: $button-sm-padding
  }
  &.mini {
    font-size: $font-size-mini;
    &.btn-icon {
      padding: $button-mini-icon-padding;
    }
    .c-btn-icon {
      font-size:$button-mini-icon-size;
      height:$button-mini-icon-size;
      width: $button-mini-icon-size;
    }
    padding: $button-mini-padding;
  }

  /* Color variations
  --------------------------------- */
  @each $c, $v in $colors {
    @include when('#{$color-prefix}-#{$c}') {
      @include make-colored-button($v);
      @include when('outlined') {
        @include make-outlined-button($v);
      }
      @include when('flat') {
        @include make-flat-button($v);
      }
      @include when('pure-text') {
        @include make-text-only-button($v);
      }
    }
  }
  
  /* Shape variations
  --------------------------------- */
  @include when('sharp') {
    border-radius: 0;
  }

  @include when('round') {
    border-radius: $border-radius-round;
  }

  @include when('circle') {
    border-radius: 50%;
    padding: $button-circle-padding;
    &.lg {
      padding: $button-lg-circle-padding;
    }
    &.sm {
      padding: $button-sm-circle-padding;
    }
    &.mini {
      padding: $button-mini-circle-padding;
    }
    .c-btn-icon {
      margin-right: 0;
    }
  }

  /* Style variations
  --------------------------------- */
  @include when('raised') {
    box-shadow: $box-shadow-lighter;

    &:not([disabled]):hover {
      box-shadow: $box-shadow-light;
    }

    &[disabled] {
      box-shadow: none;
    }
  }
}